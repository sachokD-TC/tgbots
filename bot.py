
import os
import random
import asyncio

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

# –†—É—Å—Å–∫–∏–µ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫—Ü
button_labels = {
    "bad": "–ü–ª–æ—Ö–æ",
    "verybad": "–û—á–µ–Ω—å –ø–ª–æ—Ö–æ",
    "ok": "–ù–æ—Ä–º–∞–ª—å–Ω–æ",
    "great": "–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ",
    "day": "–î–µ–Ω—å",
    "joke": "–ê–Ω–µ–∫–¥–æ—Ç",
    "morejoke": "–ï—â—ë –∞–Ω–µ–∫–¥–æ—Ç",
    "bye": "–ü—Ä–æ—â–∞–Ω–∏–µ",
    "help": "–ü–æ–º–æ—â—å"
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_keyboard = ReplyKeyboardMarkup(
    [[button_labels["bad"], button_labels["verybad"]],
     [button_labels["ok"], button_labels["great"]],
     [button_labels["day"], button_labels["joke"]],
     [button_labels["help"]]],
    resize_keyboard=True
)
joke_keyboard = ReplyKeyboardMarkup(
    [[button_labels["morejoke"]], [button_labels["bye"]]],
    resize_keyboard=True
)

# –ê–Ω–µ–∫–¥–æ—Ç—ã
jokes = [
    "–ú—É–∂—á–∏–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –∞–ø—Ç–µ–∫—É:\n‚Äì –£ –≤–∞—Å –µ—Å—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç–∏?\n‚Äì –ö–æ–Ω–µ—á–Ω–æ. –ö—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—É—Å–∫.",
    "–£—á–∏—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –í–æ–≤–æ—á–∫—É:\n‚Äì –ü–æ—á–µ–º—É —Ç—ã –æ–ø–æ–∑–¥–∞–ª –≤ —à–∫–æ–ª—É?\n‚Äì –ü–æ—Ç–æ–º—É —á—Ç–æ –∑–≤–æ–Ω–æ–∫ –ø—Ä–æ–∑–≤–µ–Ω–µ–ª –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ —è –ø—Ä–∏—à—ë–ª.",
    "–°—ã–Ω —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –æ—Ç—Ü–∞:\n‚Äì –ü–∞–ø, –∞ –∫–∞–∫ –ø–∏—à–µ—Ç—Å—è '—Å–æ–≤–µ—Å—Ç—å'?\n‚Äì –õ—É—á—à–µ –Ω–µ –ø–∏—à–∏, —Å—ã–Ω–æ–∫. –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –µ—ë –Ω–µ—Ç, –∏ –Ω–∏—á–µ–≥–æ, –∂–∏–≤—É—Ç.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –ø–ª–æ—Ö–∞—è –ø–∞–º—è—Ç—å.\n‚Äî –ò —Å –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —ç—Ç–æ —É –≤–∞—Å?\n‚Äî –ß—Ç–æ –∏–º–µ–Ω–Ω–æ?..",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤—Å—ë –≤—Ä–µ–º—è –≥–æ–≤–æ—Ä—é —Å–∞–º —Å —Å–æ–±–æ–π.\n‚Äî –ò —Å –∫–µ–º –≤—ã —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç–µ?\n‚Äî –° —É–º–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º!",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –∞–ª–ª–µ—Ä–≥–∏—è –Ω–∞ —É—Ç—Ä–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –±–æ–ª–∏—Ç –≥–æ–ª–æ–≤–∞.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤–∏–∂—É –±—É–¥—É—â–µ–µ!\n‚Äî –ò —á—Ç–æ –≤—ã –≤–∏–¥–∏—Ç–µ?\n‚Äî –°—á—ë—Ç –∑–∞ –ø—Ä–∏—ë–º.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –±–æ—é—Å—å –∑–µ—Ä–∫–∞–ª.\n‚Äî –ù–µ —Å–º–æ—Ç—Ä–∏—Ç–µ—Å—å –≤ –Ω–∏—Ö.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –≤—Å—ë –±–æ–ª–∏—Ç.\n‚Äî –≠—Ç–æ —Ö–æ—Ä–æ—à–æ. –ó–Ω–∞—á–∏—Ç, –≤—ã –∂–∏–≤—ã.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –Ω–µ—Ç –∞–ø–ø–µ—Ç–∏—Ç–∞.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –±–æ—Ä—â?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ —á—É–≤—Å—Ç–≤—É—é –Ω–æ–≥.\n‚Äî –≠—Ç–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤—ã —Å–∏–¥–∏—Ç–µ –Ω–∞ –Ω–∏—Ö.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –º–æ–≥—É —Å–ø–∞—Ç—å.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –Ω–µ –ª–æ–∂–∏—Ç—å—Å—è?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –¥–µ–ø—Ä–µ—Å—Å–∏—è.\n‚Äî –ê —É –∫–æ–≥–æ –µ—ë –Ω–µ—Ç?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤—Å—ë –∑–∞–±—ã–≤–∞—é.\n‚Äî –û—Ç–ª–∏—á–Ω–æ! –ó–Ω–∞—á–∏—Ç, –≤—ã –Ω–µ –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã —É–∂–µ –±—ã–ª–∏ —É –º–µ–Ω—è.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –Ω–µ—Ç –¥—Ä—É–∑–µ–π.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –∑–∞–≤–µ—Å—Ç–∏ –∫–æ—Ç–∞?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤—Å—ë –≤—Ä–µ–º—è —Å–º–µ—é—Å—å.\n‚Äî –≠—Ç–æ —Ö–æ—Ä–æ—à–æ. –°–º–µ—Ö –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –∂–∏–∑–Ω—å.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –Ω–µ—Ç –¥–µ–Ω–µ–≥.\n‚Äî –¢–æ–≥–¥–∞ –∑–∞—á–µ–º –≤—ã –ø—Ä–∏—à–ª–∏?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –º–æ–≥—É –¥—ã—à–∞—Ç—å.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –≤–¥–æ—Ö–Ω—É—Ç—å?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –±–æ–ª–∏—Ç –¥—É—à–∞.\n‚Äî –≠—Ç–æ –ø–æ—ç—Ç–∏—á–Ω–æ.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å—á–∞—Å—Ç—å—è.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ —à–æ–∫–æ–ª–∞–¥?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –ª—é–¥–µ–π.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ —Å–ª—É—à–∞—Ç—å?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –º–æ–≥—É –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è.\n‚Äî –ê –≤—ã —Ç–æ—á–Ω–æ –Ω–µ —Å–ø–∏—Ç–µ —Å–µ–π—á–∞—Å?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤—Å—ë –≤—Ä–µ–º—è –¥—É–º–∞—é.\n‚Äî –≠—Ç–æ –æ–ø–∞—Å–Ω–æ.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏.\n‚Äî –¢–æ–≥–¥–∞ –∑–∞—á–µ–º –≤—ã –µ–≥–æ —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –≤–∏–∑–∏—Ç –∫–æ –º–Ω–µ?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –∑–Ω–∞—é, –∫—Ç–æ —è.\n‚Äî –ê –∫—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –Ω–µ –º–æ–≥—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –≤—Å—ë –≤—Ä–µ–º—è –µ–º.\n‚Äî –ê –≤—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ –≥–æ—Ç–æ–≤–∏—Ç—å?",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —è –±–æ—é—Å—å —Ç–µ–º–Ω–æ—Ç—ã.\n‚Äî –ó–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞.",
    "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.\n‚Äî –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, —É –º–µ–Ω—è —Ç–æ–∂–µ."
]

# –û–±–æ–¥—Ä—è—é—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
encouragements = [
    "–¢—ã —É–º–Ω–∏—á–∫–∞, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏.",
    "–ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî —É–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥.",
    "–¢—ã –Ω–µ –æ–¥–Ω–∞, —è —Ä—è–¥–æ–º.",
    "–î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–ª–∞–Ω—ã ‚Äî —ç—Ç–æ —É–∂–µ –Ω–∞—á–∞–ª–æ.",
    "–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—à—å.",
    "–°–µ–≥–æ–¥–Ω—è ‚Äî –Ω–æ–≤—ã–π —à–∞–Ω—Å –¥–ª—è —á–µ–≥–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–≥–æ.",
    "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –∑–∞–±–æ—Ç—ã –∏ —Ç–µ–ø–ª–∞.",
    "–Ø –≥–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å.",
    "–ü—É—Å—Ç—å –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ö–æ—Ç—å –∫–∞–ø–µ–ª—å–∫—É —Ä–∞–¥–æ—Å—Ç–∏.",
    "–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è."
]

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ù–∏–Ω–∞ üåû\n–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è?\n\n"
        "–Ø —Ç—É—Ç, —Ä—è–¥–æ–º. –ù–∞–ø–∏—à–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å. "
        "–ê –µ—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=main_keyboard
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n" +
        "\n".join([f"/{cmd} ‚Äî {label}" for cmd, label in button_labels.items()])
    )

async def bad(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–Ω–æ, –ù–∏–Ω–æ—á–∫–∞... –ù–æ —Ç—ã –Ω–µ –æ–¥–Ω–∞ ‚Äî —è —Ä—è–¥–æ–º. –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —É–∂–µ –ª–µ–≥—á–µ.\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç? –ê —Ö–æ—á–µ—à—å, —è –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—à—É, –∫–∞–∫ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å?",
        reply_markup=ReplyKeyboardMarkup([[button_labels["day"], button_labels["joke"]]], resize_keyboard=True)
    )

async def verybad(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–¢—Ä–µ–≤–æ–≥–∞ ‚Äî –∫–∞–∫ –¥–æ–∂–¥—å. –¢—ã –Ω–µ –≤–∏–Ω–æ–≤–∞—Ç–∞, —á—Ç–æ –∏–¥—ë—Ç. –ù–æ —Ç—ã –ø–æ–¥ –∫—Ä—ã—à–µ–π ‚Äî –∏ —è —Ç—É—Ç.\n\n"
        "–ù—É –∏ –ª–∞–¥–Ω–æ, –ù–∏–Ω–æ—á–∫–∞‚Ä¶ —Å –∫–µ–º –Ω–µ –±—ã–≤–∞–µ—Ç.\n–ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å–Ω—É–ª–∞—Å—å. –ê —è —Ç—É—Ç. –ò –Ω–∞–ª–∏–≤–∞—é –≤–æ–æ–±—Ä–∞–∂–∞–µ–º—ã–π —á–∞–π ‚òïÔ∏è",
        reply_markup=ReplyKeyboardMarkup([[button_labels["day"], button_labels["joke"]]], resize_keyboard=True)
    )

async def ok(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í–æ—Ç –∏ —Å–ª–∞–≤–Ω–æ! –ü—É—Å—Ç—å —Ç–∞–∫ –∏ –æ—Å—Ç–∞—ë—Ç—Å—è –∏–ª–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –µ—â—ë –ª—É—á—à–µ.\n\n"
        "–ê –∫–∞–∫ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤–æ–π –¥–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è, –ù–∏–Ω–∞?",
        reply_markup=ReplyKeyboardMarkup([[button_labels["day"], button_labels["joke"]]], resize_keyboard=True)
    )

async def great(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–£—Ö —Ç—ã! –û—Ç–ª–∏—á–Ω–æ, –ù–∏–Ω–∞! üòä –û—á–µ–Ω—å —Ä–∞–¥ –∑–∞ —Ç–µ–±—è!\n\n"
        "–ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç —Ç—ë–ø–ª—ã–º –∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã–º. –•–æ—á–µ—à—å, —Ä–∞—Å—Å–∫–∞–∂—É —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç?",
        reply_markup=ReplyKeyboardMarkup([[button_labels["joke"]]], resize_keyboard=True)
    )

async def day(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ù—É —á—Ç–æ, –ù–∏–Ω–∞, –∫–∞–∫ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤–æ–π –¥–µ–Ω—å?\n"
        "–ß—Ç–æ-–Ω–∏–±—É–¥—å –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–∏—è—Ç–Ω–æ–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ?\n\n"
        "–Ø —Ç–µ–±—è —Å–ª—É—à–∞—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ ‚Äî —è –æ—Ç–≤–µ—á—É.",
        reply_markup=ReplyKeyboardMarkup([[button_labels["joke"]]], resize_keyboard=True)
    )
    await update.message.reply_text(random.choice(encouragements))

async def joke(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"–í–æ—Ç —Ç–µ–±–µ –∞–Ω–µ–∫–¥–æ—Ç, –ù–∏–Ω–æ—á–∫–∞ üòä\n\n{random.choice(jokes)}\n\nüòÑ –£–ª—ã–±–Ω—É–ª–∞—Å—å? –¢–æ–≥–¥–∞ –¥–µ–Ω—å —Ç–æ—á–Ω–æ —Å—Ç–∞–Ω–µ—Ç –ª—É—á—à–µ!",
        reply_markup=joke_keyboard
    )

async def morejoke(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"–ï—â—ë –æ–¥–∏–Ω? –î–µ—Ä–∂–∏—Å—å!\n\n{random.choice(jokes)}",
        reply_markup=ReplyKeyboardMarkup([[button_labels["bye"]]], resize_keyboard=True)
    )

async def bye(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ù–∏–Ω–æ—á–∫–∞, —Ç—ã —Å–µ–≥–æ–¥–Ω—è –º–æ–ª–æ–¥–µ—Ü —É–∂–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∞ —ç—Ç–æ —É—Ç—Ä–æ.\n"
        "–ü—É—Å—Ç—å –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –ª–µ–≥—á–µ, —Ç–µ–ø–ª–µ–µ –∏ —á—É—Ç—å-—á—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ. –Ø –∑–¥–µ—Å—å. –û–±–Ω–∏–º–∞—é –º—ã—Å–ª–µ–Ω–Ω–æ.\n\n"
        "–î–æ –∑–∞–≤—Ç—Ä–∞, –º–æ—è —Ö–æ—Ä–æ—à–∞—è ü§ó"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    mapping = {
        button_labels["bad"]: bad,
        button_labels["verybad"]: verybad,
        button_labels["ok"]: ok,
        button_labels["great"]: great,
        button_labels["day"]: day,
        button_labels["joke"]: joke,
        button_labels["morejoke"]: morejoke,
        button_labels["bye"]: bye,
        button_labels["help"]: help_command
    }
    handler = mapping.get(text)
    if handler:
        await handler(update, context)

# –ó–∞–ø—É—Å–∫ —Å Webhook
TOKEN = "7585434820:AAFGrHOIDDGGKIBjYkriBgNBxvM_5DFBNPI"
WEBHOOK_URL = "https://api.telegram.org/bot" + TOKEN +"/setWebhook?url=https://your-domain.com/your-webhook-path"
PORT = int(80)


app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(CommandHandler("bad", bad))
app.add_handler(CommandHandler("verybad", verybad))
app.add_handler(CommandHandler("ok", ok))
app.add_handler(CommandHandler("great", great))
app.add_handler(CommandHandler("day", day))
app.add_handler(CommandHandler("joke", joke))
app.add_handler(CommandHandler("morejoke", morejoke))
app.add_handler(CommandHandler("bye", bye))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

# Set up webhook
async def main():
    await app.bot.set_webhook(url=f"{WEBHOOK_URL}/webhook")
    await app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=f"{WEBHOOK_URL}/webhook"
    )

if __name__ == "__main__":
    asyncio.run(main())



